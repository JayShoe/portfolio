type Student implements Resource {
  id: Int!
  username: String
  password: String
  email: String
  prefix: String
  firstName: String!
  middleName: String
  lastName: String!
  suffix: String
  dateOfBirth: String
  gender: String
  school: String
  verified: Boolean
  dateFrom: DateTime
  dateTo: DateTime
  active: Boolean
  addresses: [UserAddress]
  contacts: [UserContact]
  enrollments: [Enrollment]
  __typename: String
}

input StudentInput{
  id: Int!
  username: String
  password: String
  email: String
  prefix: String
  firstName: String
  middleName: String
  lastName: String
  suffix: String
  verified: Boolean
  active: Boolean
  dateOfBirth: DateTime
  gender: String
  school: String
  addresses: [UserAddressInput]
  contacts: [UserContactInput]
  enrollments: [EnrollmentInput]
  __typename: String
}

type TeacherStudent implements Resource {
  id: Int!
  username: String
  password: String
  email: String
  prefix: String
  firstName: String!
  middleName: String
  lastName: String!
  suffix: String
  dateOfBirth: String
  gender: String
  school: String
  verified: Boolean
  dateFrom: DateTime
  dateTo: DateTime
  relatedFrom: DateTime
  relatedTo: DateTime
  active: Boolean
  addresses: [UserAddress]
  contacts: [UserContact]
  enrollments: [Enrollment]
  __typename: String
}

type StudentResponse implements ResponsePayload {
  success: Boolean
  data: Student
  errors: [String]
}

type TeacherStudentResponse implements ResponsePayload {
  success: Boolean
  data: TeacherStudent
  errors: [String]
}

type StudentCollectionResponse implements CollectionResponsePayload {
  data: [Student]
  errors: [String]
  metadata: QueryMetaData
}

type TeacherStudentCollectionResponse implements CollectionResponsePayload {
  data: [TeacherStudent]
  errors: [String]
  metadata: QueryMetaData
}

extend type Query {
  students(queryOptions: QueryOptionsInput): StudentCollectionResponse!
    @route(resolver: "Student@getAll", operation: "retrieveCollection")
  student(id: Int!): Student!
    @route(resolver: "Student@get", operation: "retrieve")
#  studentBooks(id: Int!, queryOptions: QueryOptionsInput): StudentBookCollectionResponse!
#    @route(resolver: "Student@getBookCheckouts", operation: "retrieveCollection")
}

extend type Mutation {
  createStudent(
    username: String!
    password: String!
    email: String
    prefix: String
    firstName: String!
    middleName: String
    lastName: String!
    suffix: String
    verified: Boolean
    active: Boolean
    dateOfBirth: DateTime
    gender: String
    school: String
    addresses: [UserAddressInput]
    contacts: [UserContactInput]
    enrollments: [EnrollmentInput]
  ): StudentResponse @route(resolver: "Student@create", operation: "create")

  updateStudent(
    id: Int!
    username: String
    password: String
    email: String
    prefix: String
    firstName: String
    middleName: String
    lastName: String
    suffix: String
    verified: Boolean
    active: Boolean
    dateOfBirth: DateTime
    gender: String
    school: String
    addresses: [UserAddressInput]
    contacts: [UserContactInput]
    enrollments: [EnrollmentInput]
  ): StudentResponse @route(resolver: "Student@update", operation: "update")

  lockStudent(id: Int!): StudentResponse
  @route(resolver: "Student@lock", operation: "update")

  unlockStudent(id: Int!): StudentResponse
  @route(resolver: "Student@unlock", operation: "update")

  deleteStudent(id: Int!): StudentResponse
    @route(resolver: "Student@delete", operation: "delete")
}
