type Teacher implements Resource {
  id: Int!
  username: String
  password: String
  prefix: String
  firstName: String!
  middleName: String
  lastName: String!
  suffix: String
  verified: Boolean
  dateFrom: DateTime
  dateTo: DateTime
  active: Boolean
  students: [Student]
  addresses: [UserAddress]
  contacts: [UserContact]
  enrollments: [Enrollment]
  __typename: String
}

input TeacherInput  {
  id: Int!
  username: String
  password: String
  prefix: String
  firstName: String
  middleName: String
  lastName: String
  suffix: String
  verified: Boolean
  dateFrom: DateTime
  dateTo: DateTime
  active: Boolean
  students: [StudentInput]
  addresses: [UserAddressInput]
  contacts: [UserContactInput]
  enrollments: [EnrollmentInput]
  __typename: String
}

type TeacherResponse implements ResponsePayload {
  success: Boolean
  data: Teacher
  errors: [String]
}

type TeacherCollectionResponse implements CollectionResponsePayload {
  data: [Teacher]
  errors: [String]
  metadata: QueryMetaData
}

extend type Query {
  teachers(queryOptions: QueryOptionsInput): TeacherCollectionResponse!
  @route(resolver: "Teacher@getAll", operation: "retrieveCollection")
  teacher(id: Int!): Teacher!
  @route(resolver: "Teacher@get", operation: "retrieve")
  teacherStudents(id: Int!, queryOptions: QueryOptionsInput): TeacherStudentCollectionResponse!
  @route(resolver: "Teacher@getStudents", operation: "retrieveCollection")
}

extend type Mutation {
  createTeacher(
    username: String!
    password: String!
    prefix: String
    firstName: String!
    middleName: String
    lastName: String!
    suffix: String
    verified: Boolean
    active: Boolean
    students:[StudentInput]
    addresses: [UserAddressInput]
    contacts: [UserContactInput]
    enrollments: [EnrollmentInput]
  ): TeacherResponse @route(resolver: "Teacher@create", operation: "create")

  updateTeacher(
    id: Int!
    username: String
    password: String
    prefix: String
    firstName: String
    middleName: String
    lastName: String
    suffix: String
    verified: Boolean
    active: Boolean
    students:[StudentInput]
    addresses: [UserAddressInput]
    contacts: [UserContactInput]
    enrollments: [EnrollmentInput]
  ): TeacherResponse @route(resolver: "Teacher@update", operation: "update")

  deleteTeacher(id: Int!): TeacherResponse
  @route(resolver: "Teacher@delete", operation: "delete")

  assignStudentToTeacher(
    teacher: TeacherInput!
    student: StudentInput!
  ):TeacherStudentResponse @route(resolver: "Teacher@assignStudent", operation: "relate")

  unassignStudentFromTeacher(
    teacher: TeacherInput!
    student: StudentInput!
  ):TeacherStudentResponse @route(resolver: "Teacher@unassignStudent", operation: "dissociate")
}