@import '~@angular/material/theming';
@import '~src/theme';

.assignment-structure-selection {
    button {
        background-position: center 20px;
        background-repeat: no-repeat;
        background-color: transparent;
        border: 0 none;
        cursor: pointer;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        margin: 2rem auto;
        min-height: 300px;
        width: 90%;

        @include mat-elevation-transition;
        @include mat-elevation(2);

        h3 {
            font-weight: 500;
            font-size: 20px;
            margin-bottom: 0;
            margin-top: 200px;
        }

        p {
            color: rgba(0, 0, 0, 0.54);
        }

        &:hover {
            @include mat-elevation(5);
        }

        &.blank-unsectioned {
            background-image: url('/assets/images/assignment-type-blank-no-section.png');
        }

        &.blank-sectioned {
            background-image: url('/assets/images/assignment-type-blank.png');
        }

        &.reading-writing {
            background-image: url('/assets/images/assignment-type-rw.png');
        }
    }

    @include respond-to('desktop') {
        display: flex;
        flex-direction: row;

        button {
            display: inline-flex;
            margin: 2rem;
            width: 300px;
        }
    }
}

.detail-section {
    margin: 0 0 2rem 0;

    h2 {
        margin: 0;
        font-size: 1.1rem;
    }


    .book-detail {
        display: block;
        width: 150px;
        text-align: center;
        margin: 0 $page-grid-layout-gap $page-grid-layout-gap 0;

        .book-cover {
            width: 100px;
            height: 150px;
            border: 2px solid #aaa;
        }

        &:last-child {
            margin-right: 0;
        }
    }

    .file-list {
        list-style-type: none;
        margin: 0 0 1rem;
        padding: 0;
    
        > li {
            list-style-type: none;
            display: flex;
            align-content: center;
            justify-content: flex-start;
            align-items: center;
            justify-items: center;
    
            .delete-file {
                margin-left: 1rem;
                color: #c00;
                font-size: 20px;
                cursor: pointer;
            }
        }
    }
}

.question {
    border-top: 1px #eee solid;
    margin: 0 0 20px; 
    position: relative;

    h3 {
        margin: 16px 0;
    }

    h4:not(:first-of-type) {
        margin-top: 2rem;
    }

    .question-title {
        justify-content: flex-end; 
        align-items: center;
    }

    .question-editor {
        > quill-editor {
            width: 100%;
        }
    }

    .question-answer-list {
        list-style-type: none;
        padding: 0;
        margin: 0;
        width: 100%;

        > li {
            display: flex; 
            flex-wrap: wrap;
            margin-bottom: 1rem;
            width: 100%;

            > quill-editor {
                width: 80%;
            }

            .correct-answer {
                flex-basis: 100%; 
                margin-top: 0.5rem;
            }
        }
    }

    @include respond-to('desktop') {

        .question-editor {
            > quill-editor {
                width: 45%;
            }
        }

        .question-answer-list {
            width: 50%;

             > li > quill-editor {
                 width: 90%;
             }
        }
    }
    
}

quill-editor > ::ng-deep .ql-container { 
    height: 300px;
}