pipelines:
  branches:
    '{master}':
      - step:
          name: Test and Build
          image: rastasheep/alpine-node-chromium:12-alpine
          caches:
            - node
          script:
            # Print out registry details for @spidersmart/ng to npmrc file so that install can pull it without issue
            - printf "registry=http://registry.npmjs.org\n@spidersmart:registry=${NPM_REGISTRY_URL}\n//npm.pkg.github.com/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
            - npm install
            # - npm run lint:prod
            # - npm run test:prod
            - npm run ng build -- --configuration=staging --output-path=dist/staging
            - npm run ng build -- --configuration=production --output-path=dist/production
          artifacts:
            - dist/staging/**
            - dist/production/**
      - step:
          name: Deploy to Staging
          deployment: Staging
          script:
            - pipe: atlassian/sftp-deploy:0.5.0
              variables:
                USER: $USER
                SERVER: $HOST
                REMOTE_PATH: '/var/www/vhosts/admin.beta.spidersmart.com/spidersmart-admin/'
                LOCAL_PATH: 'dist/staging/*'
                PASSWORD: $PASSWORD
      - step:
          name: Deploy to Production
          trigger: manual
          deployment: Production
          script:
            - pipe: atlassian/sftp-deploy:0.5.0
              variables:
                USER: $USER
                SERVER: $HOST
                REMOTE_PATH: '/www/spidersmart-admin/'
                LOCAL_PATH: 'dist/production/*'
                PASSWORD: $PASSWORD
