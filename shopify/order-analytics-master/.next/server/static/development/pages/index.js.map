{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Button.js","webpack:///./components/DatePicker.js","webpack:///./components/Dropdown.js","webpack:///./components/GraphWidget.js","webpack:///./components/MetricCard.js","webpack:///./components/MetricDashboard.js","webpack:///./components/PieWidget.js","webpack:///./components/Table.js","webpack:///./components/Table/Row.js","webpack:///./components/Table/VariantRow.js","webpack:///./components/TableWidget.js","webpack:///./components/WidgetsDashboard.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/from.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/create.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/values.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/promise.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/reflect/construct.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime-corejs2/regenerator/index.js","webpack:///./pages/dashboard.js","webpack:///./pages/index.js","webpack:///external \"@shopify/polaris\"","webpack:///external \"core-js/library/fn/array/from\"","webpack:///external \"core-js/library/fn/array/is-array\"","webpack:///external \"core-js/library/fn/get-iterator\"","webpack:///external \"core-js/library/fn/object/create\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-prototype-of\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"core-js/library/fn/object/set-prototype-of\"","webpack:///external \"core-js/library/fn/object/values\"","webpack:///external \"core-js/library/fn/promise\"","webpack:///external \"core-js/library/fn/reflect/construct\"","webpack:///external \"core-js/library/fn/symbol\"","webpack:///external \"core-js/library/fn/symbol/iterator\"","webpack:///external \"currency-symbols\"","webpack:///external \"js-cookie\"","webpack:///external \"moment\"","webpack:///external \"randomcolor\"","webpack:///external \"react\"","webpack:///external \"react-chartjs-2\"","webpack:///external \"regenerator-runtime\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from \"react\";\n\n/**\n * types:\n * primary\n * secondary\n * success\n * danger\n * warning\n * info\n * light\n * dark\n */\nclass Button extends React.Component {\n  render() {\n    return (\n      <button\n        className={\"btn btn-\" + this.props.type}\n        onClick={this.props.onClick}\n      >\n        {this.props.title}\n      </button>\n    );\n  }\n}\n\nexport default Button;\n","import React from \"react\";\n\nclass DatePicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLabel = this.renderLabel.bind(this);\n  }\n\n  renderLabel() {\n    if (this.props.label) {\n      return <label className=\"form-label\">{this.props.label}</label>;\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    const s = document.createElement(\"script\");\n    s.type = \"text/javascript\";\n    s.async = true;\n    s.innerHTML = 'NioApp.Picker.date(\".date-picker\");';\n    this.instance.appendChild(s);\n  }\n\n  render() {\n    return (\n      <div\n        className=\"form-group\"\n        style={{ display: \"inline-block\", marginLeft: \"10px\" }}\n        ref={(el) => (this.instance = el)}\n      >\n        {this.renderLabel()}\n        <div className=\"form-control-wrap\">\n          <div className=\"form-icon form-icon-left\">\n            <em className=\"icon ni ni-calendar\"></em>\n          </div>\n          <input\n            type=\"text\"\n            style={{ minWidth: \"135px\" }}\n            id={this.props.id}\n            className=\"form-control date-picker\"\n            data-date-format=\"yyyy-mm-dd\"\n            defaultValue={this.props.value}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DatePicker;\n","import React from \"react\";\nimport DatePicker from \"./DatePicker\";\nimport Moment from \"moment\";\nimport Button from \"./Button\";\n\nclass Dropdown extends React.Component {\n  constructor(params) {\n    super(params);\n\n    this.state = {\n      currentItem: this.props.items[0],\n    };\n\n    this.changeHandler = this.changeHandler.bind(this);\n    this.renderDatePickers = this.renderDatePickers.bind(this);\n  }\n\n  changeHandler(itemData) {\n    this.props.setFrom(itemData.from);\n    this.props.setTo(itemData.to);\n\n    this.setState({\n      currentItem: itemData,\n    });\n  }\n\n  renderDatePickers() {\n    if (this.state.currentItem.showDatePickers) {\n      return (\n        <span>\n          {this.props.datepicker1}\n          {this.props.datepicker2}\n\n          <div\n            className=\"form-group\"\n            style={{ display: \"inline-block\", marginLeft: \"10px\" }}\n          >\n            <Button\n              onClick={this.props.applyCustomDate}\n              type=\"primary\"\n              title=\"Apply\"\n            />\n          </div>\n        </span>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <div className=\"drodown\">\n        <a\n          href=\"#\"\n          className=\"dropdown-toggle btn btn-white btn-dim btn-outline-light\"\n          data-toggle=\"dropdown\"\n        >\n          <em className=\"d-none d-sm-inline icon ni ni-filter-fill\" />\n          <span>{this.state.currentItem.title}</span>\n          <em className=\"dd-indc icon ni ni-chevron-right\" />\n        </a>\n        <div className=\"dropdown-menu dropdown-menu-right\">\n          <ul className=\"link-list-opt no-bdr\">\n            {this.props.items.map((itemData, index) => {\n              return (\n                <li onClick={() => this.changeHandler(itemData)} key={index}>\n                  <a href=\"#\">\n                    <span>{itemData.title}</span>\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        {this.renderDatePickers()}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport Button from \"./Button\";\n\nclass GraphWidget extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstAmount: \"\",\n      secondAmount: \"\",\n      showCurrency: true,\n      dataForCharts: [],\n    };\n\n    this.updateData = this.updateData.bind(this);\n    this.renderButton = this.renderButton.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.showCurrency !== undefined) {\n      this.setState({\n        showCurrency: this.props.showCurrency,\n      });\n    }\n\n    this.updateData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.fromDate !== prevProps.fromDate ||\n      this.props.toDate !== prevProps.toDate\n    ) {\n      this.updateData();\n    }\n  }\n\n  updateData() {\n    let params = \"\";\n    if (this.props.fromDate) {\n      params = \"?fromDate=\" + encodeURIComponent(this.props.fromDate);\n      if (this.props.toDate) {\n        params = params + \"&toDate=\" + encodeURIComponent(this.props.toDate);\n      }\n    } else if (this.props.toDate) {\n      params = \"?toDate=\" + encodeURIComponent(this.props.toDate);\n    }\n\n    this.setState({ dataForCharts: [] });\n\n    this.props.dataEndpoints.map((endpointData) => {\n      fetch(endpointData.endpoint + params, {\n        method: \"GET\",\n      })\n        .then((result) => result.json())\n        .then((json) => {\n          let dataForCharts = this.state.dataForCharts;\n          dataForCharts.push({\n            labels: json.data,\n            dataUnit: endpointData.dataUnit,\n            lineColor:\n              endpointData.lineColor !== undefined\n                ? endpointData.lineColor\n                : \"\",\n            lineTension: 0.3,\n            datasets: [\n              {\n                label: endpointData.label,\n                color:\n                  endpointData.lineColor !== undefined\n                    ? endpointData.lineColor\n                    : this.props.isDark\n                    ? \"#9d72ff\"\n                    : \"#7de1f8\",\n                background:\n                  endpointData.backgroundColor !== undefined\n                    ? endpointData.backgroundColor\n                    : this.props.isDark\n                    ? \"rgba(157,114,255, 0.25)\"\n                    : \"rgba(125, 225, 248, 0.25)\",\n                data: json.data,\n              },\n            ],\n          });\n          this.setState({\n            dataForCharts: dataForCharts,\n          });\n        });\n    });\n\n    if (this.props.firstAmountEndpoint !== undefined) {\n      fetch(this.props.firstAmountEndpoint + params, { method: \"GET\" })\n        .then((result) => result.json())\n        .then((json) => this.setState({ firstAmount: json.data }));\n    }\n\n    if (this.props.secondAmountEndpoint !== undefined) {\n      fetch(this.props.secondAmountEndpoint + params, { method: \"GET\" })\n        .then((result) => result.json())\n        .then((json) => this.setState({ secondAmount: json.data }));\n    }\n  }\n\n  renderButton() {\n    if (this.props.buttonAction !== undefined) {\n      return (\n        <Button\n          type=\"info\"\n          onClick={this.props.buttonAction}\n          title=\"Pie chart\"\n        />\n      );\n    }\n\n    return \"\";\n  }\n\n  renderFirstValue() {\n    let title = \"\";\n    let amount = \"\";\n    if (\n      this.props.firstAmountEndpoint !== undefined &&\n      this.props.firstTitle !== undefined\n    ) {\n      title = <h6 className=\"title\">{this.props.firstTitle}</h6>;\n      amount = (this.state.showCurrency ? \"$\" : \"\") + this.state.firstAmount;\n    }\n    return (\n      <div>\n        <div className=\"card-title-group\">\n          <div className=\"card-title\">{title}</div>\n          {this.renderButton()}\n        </div>\n        <div className=\"data\">\n          <div className=\"amount\">{amount}</div>\n        </div>\n      </div>\n    );\n  }\n\n  renderSecondValue() {\n    if (\n      this.props.secondAmountEndpoint !== undefined &&\n      this.props.secondTitle !== undefined\n    ) {\n      return (\n        <div className=\"data\">\n          <h6 className=\"sub-title\">{this.props.secondTitle}</h6>\n          <div className=\"data-group\">\n            <div className=\"amount\">\n              {this.state.showCurrency ? \"$\" : \"\"}\n              {this.state.secondAmount}\n            </div>\n            <div className=\"info text-right\">\n              <span className=\"change up text-danger\">\n                <em className=\"icon ni ni-arrow-long-up\"></em>4.63%\n              </span>\n              <br />\n              <span>vs. last week</span>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return \"\";\n  }\n\n  prepareData() {\n    let datasets = [];\n    for (let j = 0; j < this.state.dataForCharts.length; j++) {\n      let dataForChart = this.state.dataForCharts[j];\n\n      for (var i = 0; i < dataForChart.datasets.length; i++) {\n        datasets.push({\n          label: dataForChart.datasets[i].label,\n          lineTension: dataForChart.lineTension,\n          backgroundColor: dataForChart.datasets[i].background,\n          borderColor: dataForChart.datasets[i].color,\n          pointBorderColor: \"transparent\",\n          pointBackgroundColor: \"transparent\",\n          pointHoverBackgroundColor: \"#fff\",\n          pointHoverBorderColor: dataForChart.datasets[i].color,\n          pointBorderWidth: 2,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 2,\n          pointRadius: 4,\n          pointHitRadius: 4,\n          dataUnit: dataForChart.dataUnit,\n          data: dataForChart.datasets[i].data,\n        });\n      }\n    }\n\n    return datasets;\n  }\n\n  render() {\n    let self = this;\n    let data = this.prepareData();\n    let labels =\n      this.state.dataForCharts[0] !== undefined\n        ? this.state.dataForCharts[0].labels\n        : [];\n\n    return (\n      <div className=\"col-xxl-4 col-md-6\">\n        <div\n          className={\"card\" + (this.props.isDark ? \" is-dark\" : \"\") + \" h-100\"}\n        >\n          <div className=\"nk-ecwg nk-ecwg1\">\n            <div className=\"card-inner\">\n              {this.renderFirstValue()}\n\n              {this.renderSecondValue()}\n            </div>\n            <div className=\"nk-ecwg2-ck\">\n              <Line\n                data={{\n                  labels: labels,\n                  datasets: data,\n                }}\n                options={{\n                  legend: {\n                    display:\n                      this.props.displayLabel === undefined\n                        ? false\n                        : this.props.displayLabel,\n                    labels: {\n                      // boxWidth: 12,\n                      // padding: 20,\n                      fontColor: \"#6783b8\",\n                    },\n                  },\n                  maintainAspectRatio: false,\n                  tooltips: {\n                    enabled: true,\n                    callbacks: {\n                      title: function title(tooltipItem, data) {\n                        return data[\"labels\"][tooltipItem[0][\"index\"]];\n                      },\n                      label: function label(tooltipItem, data) {\n                        return (\n                          data.datasets[tooltipItem.datasetIndex][\"data\"][\n                            tooltipItem[\"index\"]\n                          ] +\n                          \" \" +\n                          data.datasets[tooltipItem.datasetIndex].dataUnit\n                        );\n                      },\n                    },\n                    backgroundColor: \"#1c2b46\",\n                    titleFontSize: 10,\n                    titleFontColor: \"#fff\",\n                    titleMarginBottom: 4,\n                    bodyFontColor: \"#fff\",\n                    bodyFontSize: 10,\n                    bodySpacing: 4,\n                    yPadding: 6,\n                    xPadding: 6,\n                    footerMarginTop: 0,\n                    displayColors: false,\n                  },\n                  scales: {\n                    yAxes: [\n                      {\n                        display: false,\n                        ticks: {\n                          beginAtZero: true,\n                          fontSize: 12,\n                          fontColor: \"#9eaecf\",\n                          padding: 0,\n                        },\n                        gridLines: {\n                          color: \"#e5ecf8\",\n                          tickMarkLength: 0,\n                          zeroLineColor: \"#e5ecf8\",\n                        },\n                      },\n                    ],\n                    xAxes: [\n                      {\n                        display: false,\n                        ticks: {\n                          fontSize: 12,\n                          fontColor: \"#9eaecf\",\n                          source: \"auto\",\n                          padding: 0,\n                        },\n                        gridLines: {\n                          color: \"transparent\",\n                          tickMarkLength: 0,\n                          zeroLineColor: \"#e5ecf8\",\n                          offsetGridLines: true,\n                        },\n                      },\n                    ],\n                  },\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GraphWidget;\n","import React from \"react\";\nimport { TextStyle, Card, DisplayText } from \"@shopify/polaris\";\nimport Cookies from \"js-cookie\";\nimport getCurrencySymbol from \"currency-symbols\";\n\nclass MetricCard extends React.Component {\n  constructor(params) {\n    super(params);\n\n    this.state = {\n      value: 0,\n      currencySymbol: \"$\",\n    };\n\n    this.updateDashboardData = this.updateDashboardData.bind(this);\n  }\n\n  componentDidMount() {\n    let currency = Cookies.get(\"shopCurrency\");\n    if (currency !== undefined) {\n      this.setState({ currencySymbol: getCurrencySymbol(currency) });\n    }\n\n    this.updateDashboardData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.fromDate !== prevProps.fromDate ||\n      this.props.toDate !== prevProps.toDate\n    ) {\n      this.updateDashboardData();\n    }\n  }\n\n  updateDashboardData() {\n    let params = \"\";\n    if (this.props.fromDate) {\n      params = \"?fromDate=\" + encodeURIComponent(this.props.fromDate);\n      if (this.props.toDate) {\n        params = params + \"&toDate=\" + encodeURIComponent(this.props.toDate);\n      }\n    } else if (this.props.toDate) {\n      params = \"?toDate=\" + encodeURIComponent(this.props.toDate);\n    }\n\n    fetch(\"/api/v1/dashboard-data/\" + this.props.endpoint + params, {\n      method: \"GET\",\n    })\n      .then((result) => result.json())\n      .then((json) => this.setState({ value: json.data }));\n  }\n\n  render() {\n    return (\n      <div style={{ width: \"24%\", padding: \"0.5%\" }}>\n        <Card>\n          <div\n            style={{\n              textAlign: \"center\",\n              paddingTop: \"20px\",\n              paddingBottom: \"10px\",\n            }}\n          >\n            <TextStyle variation=\"subdued\">\n              {this.props.title.toUpperCase()}\n            </TextStyle>\n          </div>\n          <div style={{ textAlign: \"center\", paddingBottom: \"20px\" }}>\n            <DisplayText size=\"extraLarge\">\n              {this.props.showCurrencySign ? this.state.currencySymbol : \"\"}\n              {this.state.value}\n              {this.props.showPercentSign ? \"%\" : \"\"}\n            </DisplayText>\n          </div>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default MetricCard;\n","import React from \"react\";\nimport { Layout } from \"@shopify/polaris\";\nimport MetricCard from \"./MetricCard\";\n\nclass MetricDashboard extends React.Component {\n  render() {\n    return (\n      <div className=\"d-flex bg-lighter mb-9 align-self-start\">\n        <Layout>\n          <MetricCard\n            title=\"Number of orders\"\n            endpoint=\"orders-count\"\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard\n            title=\"Revenue\"\n            endpoint=\"revenue\"\n            showCurrencySign={true}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard\n            title=\"COGS\"\n            endpoint=\"cogs\"\n            showCurrencySign={true}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard\n            title=\"Discounts\"\n            endpoint=\"discounts\"\n            showCurrencySign={true}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard\n            title=\"Shipping cost\"\n            endpoint=\"shipping-cost\"\n            showCurrencySign={true}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard\n            title=\"Shipping charged\"\n            endpoint=\"shipping-charged\"\n            showCurrencySign={true}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard\n            title=\"Gross margin\"\n            endpoint=\"gross-margin\"\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard\n            title=\"Gross profit\"\n            endpoint=\"gross-profit\"\n            showCurrencySign={true}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard\n            title=\"Taxes\"\n            endpoint=\"taxes\"\n            showCurrencySign={true}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard\n            title=\"Transaction fee\"\n            endpoint=\"transaction-fee\"\n            showCurrencySign={true}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard\n            title=\"Handling fee\"\n            endpoint=\"handling-fee\"\n            showCurrencySign={true}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard\n            title=\"Refunds\"\n            endpoint=\"refunds\"\n            showCurrencySign={true}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard\n            title=\"Avg. order value\"\n            endpoint=\"avg-orders\"\n            showCurrencySign={true}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard\n            title=\"Avg. order profit\"\n            endpoint=\"avg-order-profit\"\n            showCurrencySign={true}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard\n            title=\"Lifetime customer value (LTV)\"\n            endpoint=\"lifetime-customer-value\"\n            showCurrencySign={true}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n          <MetricCard title=\"LTV.CAC\" />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default MetricDashboard;\n","import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport Button from \"./Button\";\n\nclass PieWidget extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataForCharts: [],\n    };\n\n    this.updateData = this.updateData.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.fromDate !== prevProps.fromDate ||\n      this.props.toDate !== prevProps.toDate\n    ) {\n      this.updateData();\n    }\n  }\n\n  updateData() {\n    let params = \"\";\n    if (this.props.fromDate) {\n      params = \"?fromDate=\" + encodeURIComponent(this.props.fromDate);\n      if (this.props.toDate) {\n        params = params + \"&toDate=\" + encodeURIComponent(this.props.toDate);\n      }\n    } else if (this.props.toDate) {\n      params = \"?toDate=\" + encodeURIComponent(this.props.toDate);\n    }\n\n    this.setState({ dataForCharts: [] });\n\n    this.props.dataEndpoints.map((endpointData) => {\n      fetch(endpointData.endpoint + params, {\n        method: \"GET\",\n      })\n        .then((result) => result.json())\n        .then((json) => {\n          let dataForCharts = this.state.dataForCharts;\n          const randomColor = require(\"randomcolor\");\n          dataForCharts.push({\n            labels: Object.keys(json.data),\n            dataUnit: endpointData.dataUnit,\n            datasets: [\n              {\n                data: json.data,\n                background: randomColor({\n                  count: Object.keys(json.data).length,\n                  hue: \"random\",\n                }),\n                color: \"#fff\",\n              },\n            ],\n          });\n          this.setState({\n            dataForCharts: dataForCharts,\n          });\n        });\n    });\n  }\n\n  prepareData() {\n    let datasets = [];\n    for (let j = 0; j < this.state.dataForCharts.length; j++) {\n      let dataForChart = this.state.dataForCharts[j];\n\n      for (var i = 0; i < dataForChart.datasets.length; i++) {\n        datasets.push({\n          dataUnit: dataForChart.dataUnit,\n          backgroundColor: dataForChart.datasets[i].background,\n          borderWidth: 2,\n          borderColor: dataForChart.datasets[i].color,\n          hoverBorderColor: dataForChart.datasets[i].color,\n          data: Object.values(dataForChart.datasets[i].data),\n        });\n      }\n    }\n\n    return datasets;\n  }\n\n  renderFirstValue() {\n    if (this.props.firstTitle !== undefined) {\n      return (\n        <div className=\"card-inner h-100 stretch flex-column\">\n          <div className=\"card-title-group\">\n            <div className=\"card-title card-title-sm\">\n              <h6 className=\"title\">{this.props.firstTitle}</h6>\n            </div>\n            <div className=\"card-title card-title-sm\">\n              <Button\n                type=\"info\"\n                onClick={this.props.buttonAction}\n                title=\"Line chart\"\n              />\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    let self = this;\n    let data = this.prepareData();\n    let labels =\n      this.state.dataForCharts[0] !== undefined\n        ? this.state.dataForCharts[0].labels\n        : [];\n\n    return (\n      <div className=\"col-xxl-4 col-md-6\">\n        <div className=\"card h-100\">\n          {this.renderFirstValue()}\n          <div className=\"device-status-ck\">\n            <Pie\n              data={{\n                labels: labels,\n                datasets: data,\n              }}\n              options={{\n                legend: {\n                  display:\n                    this.props.displayLabel === undefined\n                      ? false\n                      : this.props.displayLabel,\n                  labels: {\n                    boxWidth: 12,\n                    padding: 20,\n                    fontColor: \"#6783b8\",\n                  },\n                },\n                rotation: -1.5,\n                cutoutPercentage: 70,\n                maintainAspectRatio: false,\n                tooltips: {\n                  enabled: true,\n                  callbacks: {\n                    title: function (tooltipItem, data) {\n                      return data[\"labels\"][tooltipItem[0][\"index\"]];\n                    },\n                    label: function (tooltipItem, data) {\n                      return (\n                        data.datasets[tooltipItem.datasetIndex][\"data\"][\n                          tooltipItem[\"index\"]\n                        ] +\n                        \" \" +\n                        data.datasets[tooltipItem.datasetIndex].dataUnit\n                      );\n                    },\n                  },\n                  backgroundColor: \"#1c2b46\",\n                  titleFontSize: 13,\n                  titleFontColor: \"#fff\",\n                  titleMarginBottom: 6,\n                  bodyFontColor: \"#fff\",\n                  bodyFontSize: 12,\n                  bodySpacing: 4,\n                  yPadding: 10,\n                  xPadding: 10,\n                  footerMarginTop: 0,\n                  displayColors: false,\n                },\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PieWidget;\n","import React from \"react\";\nimport Row from \"./Table/Row\";\nimport { Toast, Frame } from \"@shopify/polaris\";\nimport VariantRow from \"./Table/VariantRow\";\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      toast: false,\n      variantsOpen: [],\n      toastMessage: \"Saved\",\n    };\n\n    this.showMessage = this.showMessage.bind(this);\n    this.toastDismiss = this.toastDismiss.bind(this);\n    this.variantsOpen = this.variantsOpen.bind(this);\n    this.setVariantsOpen = this.setVariantsOpen.bind(this);\n  }\n\n  showMessage(message) {\n    this.setState({\n      toastMessage: message,\n      toast: true,\n    });\n  }\n\n  toastDismiss() {\n    this.setState({ toast: false });\n  }\n\n  variantsOpen(rowId) {\n    if (this.state.variantsOpen[rowId] === undefined) {\n      return false;\n    }\n\n    return this.state.variantsOpen[rowId];\n  }\n\n  setVariantsOpen(rowId, opened) {\n    let data = this.state.variantsOpen;\n    data[rowId] = opened;\n\n    this.setState({\n      variantsOpen: data,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"nk-tb-list is-separate is-medium mb-3\">\n          <div className=\"nk-tb-item nk-tb-head\">\n            {this.props.showCheckboxes ? (\n              <div className=\"nk-tb-col nk-tb-col-check\">\n                <div className=\"custom-control custom-control-sm custom-checkbox notext\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"custom-control-input\"\n                    id=\"uid\"\n                  />\n                  <label className=\"custom-control-label\" htmlFor=\"uid\"></label>\n                </div>\n              </div>\n            ) : null}\n\n            {this.props.parentField !== undefined ? (\n              <div className=\"nk-tb-col nk-tb-col-check\">\n                <div className=\"custom-control custom-control-sm custom-checkbox notext\"></div>\n              </div>\n            ) : null}\n\n            {this.props.header.map((headerItem, id) => {\n              return (\n                <div className=\"nk-tb-col\" key={id}>\n                  <span>{headerItem.title}</span>\n                </div>\n              );\n            })}\n          </div>\n\n          {this.props.data.map((row, id) => {\n            let data = [\n              <Row\n                key={id}\n                rowId={id}\n                row={row}\n                showCheckboxes={this.props.showCheckboxes}\n                fieldsToDisplay={\n                  this.props.fieldsToDisplay !== undefined\n                    ? this.props.fieldsToDisplay\n                    : []\n                }\n                parentField={\n                  this.props.parentField !== undefined\n                    ? this.props.parentField\n                    : false\n                }\n                inputFields={\n                  this.props.inputFields !== undefined\n                    ? this.props.inputFields\n                    : false\n                }\n                showMessage={this.showMessage}\n                variantsOpen={this.variantsOpen(id)}\n                setVariantsOpen={this.setVariantsOpen}\n              />,\n            ];\n\n            if (row.variants && row.variants.length > 1) {\n              {\n                row.variants.map((variant, variantId) => {\n                  data.push(\n                    <VariantRow\n                      row={variant}\n                      key={variantId}\n                      hidden={!this.variantsOpen(id)}\n                      fieldsToDisplay={\n                        this.props.fieldsToDisplay !== undefined\n                          ? this.props.fieldsToDisplay\n                          : []\n                      }\n                      inputFields={\n                        this.props.inputFields !== undefined\n                          ? this.props.inputFields\n                          : false\n                      }\n                      showMessage={this.showMessage}\n                    />\n                  );\n                });\n              }\n            }\n\n            return data;\n          })}\n        </div>\n\n        {this.state.toast ? (\n          <Frame>\n            <Toast\n              content={this.state.toastMessage}\n              duration={2000}\n              onDismiss={this.toastDismiss}\n            />\n          </Frame>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React from \"react\";\nimport { TextField } from \"@shopify/polaris\";\nimport Cookies from \"js-cookie\";\nimport VariantRow from \"./VariantRow\";\n\nconst WAIT_INTERVAL = 1000;\n\nclass Row extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePlusClick = this.handlePlusClick.bind(this);\n    this.prepareRow = this.prepareRow.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n\n    this.prepareRow();\n\n    let handling = 0;\n    if (this.props.row.handling_fee !== undefined) {\n      handling = this.props.row.handling_fee.value;\n    }\n\n    this.state = {\n      row: {},\n      currency: Cookies.get(\"shopCurrency\"),\n      handling: handling,\n    };\n  }\n\n  prepareRow() {\n    let fieldsToCopy = [\"retail_price\", \"handling_fee\", \"cost\", \"margin\"];\n\n    fieldsToCopy.map((field) => {\n      if (this.props.row[field] !== undefined) {\n        if (\n          this.props.row.variants !== undefined &&\n          this.props.row.variants.length === 1\n        ) {\n          //If we have only one variant, then we should copy it's fields to the main product\n          this.props.row[field] = this.props.row.variants[0][field];\n        } else {\n          this.props.row[field] = { id: field, value: \"Multiple Values\" };\n        }\n      }\n    });\n  }\n\n  componentWillMount() {\n    this.timer = null;\n  }\n\n  handlePlusClick() {\n    this.props.setVariantsOpen(this.props.rowId, !this.props.variantsOpen);\n  }\n\n  handleInputChange(value, id) {\n    if (value === \"\" || /^[0-9\\.]+$/.test(value)) {\n      this.setState({ handling: value });\n\n      clearTimeout(this.timer);\n      let self = this;\n      this.timer = setTimeout(function () {\n        fetch(\n          \"/api/v1/data-settings/products/save-handling/\" +\n            id +\n            \"?handling=\" +\n            encodeURIComponent(value)\n        ).then(() => self.props.showMessage(\"Saved\"));\n      }, WAIT_INTERVAL);\n    }\n  }\n\n  render() {\n    let hasVariants = false;\n    if (\n      this.props.parentField &&\n      this.props.row[this.props.parentField].value == 0 &&\n      this.props.row[\"variants\"].length > 1\n    ) {\n      hasVariants = true;\n    }\n\n    return (\n      <div className=\"nk-tb-item\">\n        {this.props.showCheckboxes ? (\n          <div className=\"nk-tb-col nk-tb-col-check\">\n            <div className=\"custom-control custom-control-sm custom-checkbox notext\">\n              <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id={this.props.rowId}\n              />\n              <label\n                className=\"custom-control-label\"\n                htmlFor={this.props.rowId}\n              />\n            </div>\n          </div>\n        ) : null}\n\n        {this.props.parentField ? (\n          <div className=\"nk-tb-col\">\n            <span className=\"tb-lead\">\n              {hasVariants ? (\n                <span\n                  style={{ cursor: \"pointer\" }}\n                  onClick={this.handlePlusClick}\n                >\n                  {this.props.variantsOpen ? \"-\" : \"+\"}\n                </span>\n              ) : (\n                \"\"\n              )}\n            </span>\n          </div>\n        ) : null}\n\n        {this.props.fieldsToDisplay.map((field, key) => {\n          if (this.props.row[field] === undefined) {\n            return false;\n          }\n\n          let row = this.props.row[field];\n          let value = row.value;\n          let tdClasses = \"nk-tb-col\";\n\n          if (\n            !hasVariants &&\n            this.props.inputFields &&\n            this.props.inputFields.includes(field)\n          ) {\n            tdClasses = tdClasses + \" input-field\";\n            value = (\n              <span className=\"table-input\">\n                <TextField\n                  value={String(this.state.handling ? this.state.handling : \"\")}\n                  onChange={this.handleInputChange}\n                  label=\"\"\n                  labelHidden={true}\n                  id={this.props.row[\"variants\"][0].id.value}\n                />\n              </span>\n            );\n          }\n\n          return (\n            <div className={tdClasses} key={key}>\n              <span className={isNaN(row.value) ? \"tb-sub\" : \"tb-amount\"}>\n                {value}\n                {row.showCurrency !== undefined && row.value ? (\n                  <span className=\"currency\"> {this.state.shopCurrency}</span>\n                ) : row.showPercent !== undefined && row.value ? (\n                  <span className=\"percent\"> %</span>\n                ) : (\n                  \"\"\n                )}\n              </span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Row;\n","import React from \"react\";\nimport { TextField } from \"@shopify/polaris\";\nimport Cookies from \"js-cookie\";\n\nconst WAIT_INTERVAL = 1000;\n\nclass VariantRow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      row: {},\n      variantsOpen: false,\n      currency: Cookies.get(\"shopCurrency\"),\n      handling: this.props.row.handling_fee.value,\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.timer = null;\n  }\n\n  handleInputChange(value, id) {\n    if (value === \"\" || /^[0-9\\.]+$/.test(value)) {\n      this.setState({ handling: value });\n\n      clearTimeout(this.timer);\n      let self = this;\n      this.timer = setTimeout(function () {\n        fetch(\n          \"/api/v1/data-settings/products/save-handling/\" +\n            id +\n            \"?handling=\" +\n            encodeURIComponent(value)\n        ).then(() => self.props.showMessage(\"Saved\"));\n      }, WAIT_INTERVAL);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"nk-tb-item bg-lighter\" hidden={this.props.hidden}>\n        <div className=\"nk-tb-col\" />\n        {this.props.fieldsToDisplay.map((field, key) => {\n          if (this.props.row[field] === undefined) {\n            return false;\n          }\n\n          let row = this.props.row[field];\n          let value = row.value;\n          let tdClasses = \"nk-tb-col text-center\";\n\n          if (\n            this.props.inputFields &&\n            this.props.inputFields.includes(field)\n          ) {\n            tdClasses = tdClasses + \" input-field\";\n            value = (\n              <span className=\"table-input\">\n                <TextField\n                  value={this.state.handling}\n                  label=\"\"\n                  onChange={this.handleInputChange}\n                  labelHidden={true}\n                  id={row.id.value}\n                />\n              </span>\n            );\n          }\n\n          return (\n            <div className={tdClasses} key={key}>\n              <span className={isNaN(row.value) ? \"tb-sub\" : \"tb-amount\"}>\n                {value}\n                {row.showCurrency !== undefined && row.value ? (\n                  <span className=\"currency\"> {this.state.currency}</span>\n                ) : (\n                  \"\"\n                )}\n              </span>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default VariantRow;\n","import React from \"react\";\nimport Table from \"./Table\";\n\nclass TableWidget extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n    };\n\n    this.updateData = this.updateData.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.fromDate !== prevProps.fromDate ||\n      this.props.toDate !== prevProps.toDate\n    ) {\n      this.updateData();\n    }\n  }\n\n  updateData() {\n    let params = \"\";\n    if (this.props.fromDate) {\n      params = \"?fromDate=\" + encodeURIComponent(this.props.fromDate);\n      if (this.props.toDate) {\n        params = params + \"&toDate=\" + encodeURIComponent(this.props.toDate);\n      }\n    } else if (this.props.toDate) {\n      params = \"?toDate=\" + encodeURIComponent(this.props.toDate);\n    }\n\n    fetch(this.props.endpoint + params, {\n      method: \"GET\",\n    })\n      .then((result) => result.json())\n      .then((json) => {\n        this.setState({\n          data: json.data,\n        });\n      });\n  }\n\n  render() {\n    let fieldsToDisplay = [];\n\n    if (this.state.data[0] !== undefined) {\n      fieldsToDisplay = Object.keys(this.state.data[0]);\n    }\n\n    return (\n      <div className=\"col-xxl-4 col-md-6\">\n        <div\n          className={\"card\" + (this.props.isDark ? \" is-dark\" : \"\") + \" h-100\"}\n        >\n          <Table\n            header={this.props.header}\n            data={this.state.data}\n            fieldsToDisplay={fieldsToDisplay}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TableWidget;\n","import React from \"react\";\nimport GraphWidget from \"./GraphWidget\";\nimport TableWidget from \"./TableWidget\";\nimport PieWidget from \"./PieWidget\";\n\nclass WidgetsDashboard extends React.Component {\n  constructor(params) {\n    super(params);\n\n    this.state = {\n      revenueChartLine: false,\n      revenueDataEndpoints: [],\n      expencesChartLine: false,\n      expencesDataEndpoints: [],\n    };\n\n    this.renderRevenueChart = this.renderRevenueChart.bind(this);\n    this.prepareParams = this.prepareParams.bind(this);\n    this.handleRevenueToggleButton = this.handleRevenueToggleButton.bind(this);\n    this.fetchDataForRevenueLineChart = this.fetchDataForRevenueLineChart.bind(\n      this\n    );\n  }\n\n  handleRevenueToggleButton() {\n    this.setState({\n      revenueChartLine: !this.state.revenueChartLine,\n    });\n  }\n\n  componentDidMount() {\n    this.fetchDataForRevenueLineChart();\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log(\"Did update\");\n    if (\n      this.props.fromDate !== prevProps.fromDate ||\n      this.props.toDate !== prevProps.toDate\n    ) {\n      this.fetchDataForRevenueLineChart();\n    }\n  }\n\n  renderRevenueChart() {\n    if (!this.state.revenueChartLine) {\n      return (\n        <PieWidget\n          dataEndpoints={[\n            {\n              endpoint: \"/api/v1/dashboard-data/revenue-by-channels\",\n              dataUnit: \"Dollars\",\n            },\n          ]}\n          firstTitle=\"Revenue\"\n          displayLabel={true}\n          fromDate={this.props.fromDate}\n          toDate={this.props.toDate}\n          buttonAction={this.handleRevenueToggleButton}\n        />\n      );\n    } else {\n      return (\n        <GraphWidget\n          dataEndpoints={this.state.revenueDataEndpoints}\n          buttonAction={this.handleRevenueToggleButton}\n          displayLabel={true}\n          fromDate={this.props.fromDate}\n          toDate={this.props.toDate}\n        />\n      );\n    }\n  }\n\n  prepareParams() {\n    let params = \"\";\n    if (this.props.fromDate) {\n      params = \"?fromDate=\" + encodeURIComponent(this.props.fromDate);\n      if (this.props.toDate) {\n        params = params + \"&toDate=\" + encodeURIComponent(this.props.toDate);\n      }\n    } else if (this.props.toDate) {\n      params = \"?toDate=\" + encodeURIComponent(this.props.toDate);\n    }\n\n    return params;\n  }\n\n  async fetchDataForRevenueLineChart() {\n    let params = this.prepareParams();\n\n    await fetch(\"/api/v1/dashboard-data/revenue-by-channels\" + params, {\n      method: \"GET\",\n    })\n      .then((result) => result.json())\n      .then((json) => {\n        console.log(\"json.data\");\n        console.log(json.data);\n        let channels = Object.keys(json.data);\n        console.log(\"channels\");\n        console.log(channels);\n        let result = [];\n\n        for (let channel of channels) {\n          result.push({\n            endpoint:\n              \"/api/v1/dashboard-data/revenue-by-channel-by-months?channel=\" +\n              encodeURIComponent(channel),\n            dataUnit: \"Dollars\",\n            label: channel,\n          });\n        }\n\n        this.setState({\n          revenueDataEndpoints: result,\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"row g-gs\">\n          {/*FIRST ROW*/}\n          <GraphWidget\n            dataEndpoints={[\n              {\n                endpoint: \"/api/v1/dashboard-data/profit-by-months\",\n                dataUnit: \"Dollars\",\n              },\n            ]}\n            firstAmountEndpoint=\"/api/v1/dashboard-data/revenue\"\n            secondAmountEndpoint=\"/api/v1/dashboard-data/net-profit\"\n            firstTitle=\"Total\"\n            secondTitle=\"Net Profit\"\n            isDark={true}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n\n          <GraphWidget\n            dataEndpoints={[\n              {\n                endpoint:\n                  \"/api/v1/dashboard-data/lifetime-customer-value-months\",\n                dataUnit: \"Dollars\",\n              },\n            ]}\n            firstAmountEndpoint=\"/api/v1/dashboard-data/lifetime-customer-value\"\n            firstTitle=\"LTV\"\n            isDark={false}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n\n          <GraphWidget\n            dataEndpoints={[\n              {\n                endpoint: \"/api/v1/dashboard-data/orders-count-months\",\n                dataUnit: \"Orders\",\n              },\n            ]}\n            firstAmountEndpoint=\"/api/v1/dashboard-data/orders-count\"\n            firstTitle=\"New orders\"\n            isDark={false}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n            showCurrency={false}\n          />\n        </div>\n\n        <div className=\"row g-gs\">\n          {/*SECOND ROW*/}\n          <GraphWidget\n            dataEndpoints={[\n              {\n                endpoint: \"/api/v1/dashboard-data/adspend-total-by-months\",\n                dataUnit: \"Dollars\",\n                label: \"Total Adspend\",\n              },\n              {\n                endpoint: \"/api/v1/dashboard-data/adspend-average-by-months\",\n                dataUnit: \"Dollars\",\n                label: \"Average Adspend\",\n                backgroundColor: \"#d46c6c\",\n                lineColor: \"#d01010\",\n              },\n            ]}\n            firstAmountEndpoint=\"/api/v1/dashboard-data/adspend\"\n            secondAmountEndpoint=\"/api/v1/dashboard-data/adspend-per-order\"\n            firstTitle=\"Adspend\"\n            secondTitle=\"Adspend Per Order\"\n            displayLabel={true}\n            isDark={false}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n\n          <GraphWidget\n            dataEndpoints={[\n              {\n                endpoint: \"/api/v1/dashboard-data/average-order-price-months\",\n                dataUnit: \"Dollars\",\n                label: \"Average order value month\",\n              },\n              {\n                endpoint: \"/api/v1/dashboard-data/average-order-profit-months\",\n                dataUnit: \"Dollars\",\n                label: \"Average order profit month\",\n                backgroundColor: \"#d46c6c\",\n                lineColor: \"#d01010\",\n              },\n            ]}\n            displayLabel={true}\n            isDark={false}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n\n          <GraphWidget\n            dataEndpoints={[\n              {\n                endpoint: \"/api/v1/dashboard-data/customers-count-months\",\n                dataUnit: \"Orders\",\n              },\n            ]}\n            firstAmountEndpoint=\"/api/v1/dashboard-data/customers-count\"\n            firstTitle=\"New customers\"\n            isDark={false}\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n            showCurrency={false}\n          />\n        </div>\n        <div className=\"row g-gs\">\n          {/*THIRD ROW*/}\n          {this.renderRevenueChart()}\n\n          <TableWidget\n            header={[{ title: \"Campaign name\" }, { title: \"Spends\" }]}\n            endpoint=\"/api/v1/dashboard-data/campaigns-table\"\n            fromDate={this.props.fromDate}\n            toDate={this.props.toDate}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WidgetsDashboard;\n","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/array/is-array\");","module.exports = require(\"core-js/library/fn/get-iterator\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/object/values\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"core-js/library/fn/reflect/construct\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import _Object$defineProperty from \"../../core-js/object/define-property\";\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import _Object$getPrototypeOf from \"../../core-js/object/get-prototype-of\";\nimport _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\nexport default function _getPrototypeOf(o) {\n  _getPrototypeOf = _Object$setPrototypeOf ? _Object$getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || _Object$getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _Object$create from \"../../core-js/object/create\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = _Object$create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\nexport default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = _Object$setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import _Symbol$iterator from \"../../core-js/symbol/iterator\";\nimport _Symbol from \"../../core-js/symbol\";\n\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","module.exports = require(\"regenerator-runtime\");\n","import React from \"react\";\nimport Moment from \"moment\";\nimport DatePicker from \"../components/DatePicker\";\nimport Dropdown from \"../components/Dropdown\";\nimport MetricDashboard from \"../components/MetricDashboard\";\nimport WidgetsDashboard from \"../components/WidgetsDashboard\";\n\nclass Dashboard extends React.Component {\n  constructor(params) {\n    super(params);\n\n    let today = Moment();\n\n    this.state = {\n      fromDate: today.format(\"YYYY-MM-DD\"),\n      toDate: today.format(\"YYYY-MM-DD\"),\n    };\n\n    this.applyCustomDate = this.applyCustomDate.bind(this);\n    this.setFrom = this.setFrom.bind(this);\n    this.setTo = this.setTo.bind(this);\n  }\n\n  setFrom(from) {\n    this.setState({\n      fromDate: from,\n    });\n  }\n\n  setTo(to) {\n    this.setState({\n      toDate: to,\n    });\n  }\n\n  applyCustomDate() {\n    this.setState({\n      fromDate: document.getElementById(\"from-date-picker\").value,\n      toDate: document.getElementById(\"to-date-picker\").value,\n    });\n  }\n\n  render() {\n    let yesterday = new Date();\n    let today = Moment();\n    let startOfWeek = Moment();\n    let startOfMonth = Moment();\n    let startOfYear = Moment();\n    let startOfLastWeek = Moment();\n    let endOfLastWeek = Moment();\n    let startOfLastMonth = Moment();\n    let endOfLastMonth = Moment();\n    let startOfLastYear = Moment();\n    let endOfLastYear = Moment();\n    startOfWeek.startOf(\"isoWeek\");\n    startOfMonth.startOf(\"month\");\n    startOfYear.startOf(\"year\");\n    startOfLastWeek.subtract(1, \"week\").startOf(\"isoWeek\");\n    endOfLastWeek.subtract(1, \"week\").endOf(\"isoWeek\");\n    startOfLastMonth.subtract(1, \"month\").startOf(\"month\");\n    endOfLastMonth.subtract(1, \"month\").endOf(\"month\");\n    startOfLastYear.subtract(1, \"year\").startOf(\"year\");\n    endOfLastYear.subtract(1, \"year\").endOf(\"year\");\n    yesterday.setDate(yesterday.getDay() - 1);\n\n    return (\n      <div>\n        <div className=\"d-flex\">\n          <Dropdown\n            items={[\n              {\n                title: \"Today (Default)\",\n                from: today.format(\"YYYY-MM-DD\"),\n                to: today.format(\"YYYY-MM-DD\"),\n              },\n              {\n                title: \"Week-to-Date\",\n                from: startOfWeek.format(\"YYYY-MM-DD\"),\n                to: today.format(\"YYYY-MM-DD\"),\n              },\n              {\n                title: \"Month-to-Date\",\n                from: startOfMonth.format(\"YYYY-MM-DD\"),\n                to: today.format(\"YYYY-MM-DD\"),\n              },\n              {\n                title: \"Last Week\",\n                from: startOfLastWeek.format(\"YYYY-MM-DD\"),\n                to: endOfLastWeek.format(\"YYYY-MM-DD\"),\n              },\n              {\n                title: \"Last Month\",\n                from: startOfLastMonth.format(\"YYYY-MM-DD\"),\n                to: endOfLastMonth.format(\"YYYY-MM-DD\"),\n              },\n              {\n                title: \"Year-to-Date\",\n                from: startOfYear.format(\"YYYY-MM-DD\"),\n                to: today.format(\"YYYY-MM-DD\"),\n              },\n              {\n                title: \"Last Year\",\n                from: startOfLastYear.format(\"YYYY-MM-DD\"),\n                to: endOfLastYear.format(\"YYYY-MM-DD\"),\n              },\n              { title: \"All Time\", from: false, to: false },\n              {\n                title: \"Custom\",\n                showDatePickers: true,\n              },\n            ]}\n            setFrom={this.setFrom}\n            setTo={this.setTo}\n            datepicker1={\n              <DatePicker\n                value={Moment(yesterday).format(\"YYYY-MM-DD\")}\n                id=\"from-date-picker\"\n              />\n            }\n            datepicker2={\n              <DatePicker\n                value={today.format(\"YYYY-MM-DD\")}\n                id=\"to-date-picker\"\n              />\n            }\n            applyCustomDate={this.applyCustomDate}\n          />\n        </div>\n        <div style={{ marginTop: \"35px\" }} className=\"d-flex\">\n          <MetricDashboard\n            fromDate={this.state.fromDate}\n            toDate={this.state.toDate}\n          />\n        </div>\n\n        <WidgetsDashboard\n          fromDate={this.state.fromDate}\n          toDate={this.state.toDate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { useCallback, useState } from \"react\";\nimport { Heading, Tabs, Card } from \"@shopify/polaris\";\nimport Dashboard from \"./dashboard\";\n\nconst Index = () => {\n  return <Dashboard />;\n};\n\nexport default Index;\n","module.exports = require(\"@shopify/polaris\");","module.exports = require(\"core-js/library/fn/array/from\");","module.exports = require(\"core-js/library/fn/array/is-array\");","module.exports = require(\"core-js/library/fn/get-iterator\");","module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/object/values\");","module.exports = require(\"core-js/library/fn/promise\");","module.exports = require(\"core-js/library/fn/reflect/construct\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","module.exports = require(\"currency-symbols\");","module.exports = require(\"js-cookie\");","module.exports = require(\"moment\");","module.exports = require(\"randomcolor\");","module.exports = require(\"react\");","module.exports = require(\"react-chartjs-2\");","module.exports = require(\"regenerator-runtime\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAEA;;;;;;;;;;;;AAWA;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAVA;AACA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;AA9CA;AACA;AAgDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;A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","sourceRoot":""}