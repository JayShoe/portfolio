{"version":3,"sources":["components/Albums/index.jsx","components/Albums/functions.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ALBUMS","PHOTOS","getAllAlbums","a","fetch","response","json","Error","getAllPhotos","reverse","getPhotos","setPhotos","allPhotos","userId","i","setClicked","index","value","list","middle","first","last","length","position","found","console","log","Math","floor","albumId","binarySearch","findFirstIndex","array","push","map","e","slice","fetchData","setAlbums","setAllPhotos","undefined","Albums","useState","albums","photos","clicked","albumName","setAlbumName","style","borderStyle","borderWidth","borderColor","display","flexDirection","alignItems","justifyContent","width","marginLeft","alignContent","height","overflow","flexWrap","element","marginBottom","cursor","marginRight","border","wordBreak","onClick","title","textAlign","marginTop","src","thumbnailUrl","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbbd1054.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    getAllAlbums,\r\n    getAllPhotos,\r\n    getPhotos\r\n} from './functions';\r\n\r\n\r\nlet ALBUMS;\r\nlet PHOTOS;\r\n\r\nconst fetchData = async (setAlbums, setAllPhotos) => {\r\n    if (ALBUMS === undefined) {\r\n        ALBUMS = await getAllAlbums();\r\n        setAlbums(ALBUMS);\r\n    }\r\n    if (PHOTOS === undefined) {\r\n        PHOTOS = await getAllPhotos();\r\n        setAllPhotos(PHOTOS);\r\n    }\r\n\r\n    // a(ALBUMS);\r\n    // b(PHOTOS);\r\n}\r\n\r\nexport const Albums = () => {\r\n\r\n    const [albums, setAlbums] = useState([]);\r\n    const [allPhotos, setAllPhotos] = useState([]);\r\n    const [photos, setPhotos] = useState([]);\r\n    const [clicked, setClicked] = useState([]);\r\n    const [albumName, setAlbumName] = useState(\"\");\r\n    if (ALBUMS === undefined)\r\n        fetchData(setAlbums, setAllPhotos);\r\n\r\n    return (\r\n        <>\r\n            <div style={{ borderStyle:'groove',borderWidth:'10px',borderColor:\"black\"}}>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    alignItems: 'flex-start',\r\n                    justifyContent: 'flex-start',\r\n                    width: '95%',                    \r\n                }}>\r\n                    <h2 style={{marginLeft:'5vw'}}>Albums</h2>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <div style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    alignContent:'center',\r\n                    justifyContent: 'flex-start',\r\n                    width: '100%',\r\n                    height: '35vh',\r\n                    overflow: 'scroll',\r\n                }}>\r\n\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignItems: 'flex-start',\r\n                        justifyContent: 'flex-start',\r\n                        flexWrap: 'wrap',\r\n                        width: '92%',\r\n                        marginLeft: '4vw',\r\n                      \r\n\r\n                    }}>\r\n                        {albums.map((element, i) => {\r\n\r\n                            return <div style={{\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                width: \"18vw\",\r\n                                height: '30vh',\r\n                                marginBottom: '1vh',\r\n                                cursor: 'pointer',\r\n                                marginRight: '2vw',\r\n                                border: `${clicked[i] !== true ? '2px solid black' : '2px solid red'}`,\r\n                                wordBreak: 'break-all'\r\n                            }}\r\n                                onClick={(e) => { setAlbumName(element.title); getPhotos(setPhotos, allPhotos, element.userId, i, ALBUMS, setClicked) }} >\r\n\r\n                                <h4 style={{marginLeft:'1.5vw',marginRight:'1.5vw',textAlign:'center'}}>{element.title}</h4>\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <hr style={{ border: '4px solid black' }} />\r\n                <div style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'flex-start',\r\n                        alignContent:'center',\r\n                        justifyContent: 'flex-start',\r\n                        width: '100%',\r\n                    }}>\r\n                        <h2 style={{marginLeft:'3vh'}}>Photos {`${albumName ? `(${albumName})`:\"\"}`}</h2>\r\n                    </div>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    flexWrap: 'wrap',\r\n                    width: '100%',\r\n                    height:'40vh',\r\n                    overflow: 'scroll',\r\n                    marginTop: '1vh',\r\n                }}>\r\n                   \r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        alignItems: 'flex-start',\r\n                        justifyContent: 'flex-start',\r\n                        flexWrap: 'wrap',\r\n                        width: '83%',\r\n                       \r\n\r\n                    }}>\r\n                        {photos.map((element) =>\r\n                            <div>\r\n                                <img style={{\r\n                                    width: \"11vw\",\r\n                                    height: '18vh',\r\n                                    border: '1px solid black',\r\n                                    marginBottom: '1vh',\r\n                                    marginRight: '1vw',\r\n                                    marginLeft: '2vw'\r\n                                }}\r\n                                    src={element.thumbnailUrl}\r\n                                />\r\n                            </div>\r\n\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n\r\n\r\n\r\n}","export const getAllAlbums = async () => {\r\n    try {\r\n        let response = await fetch('https://jsonplaceholder.typicode.com/albums');\r\n        return await response.json();\r\n\r\n    }\r\n    catch (e) {\r\n        throw new Error(e);\r\n    }\r\n\r\n}\r\nexport const getAllPhotos = async () => {\r\n    try {\r\n        let response = await fetch('https://jsonplaceholder.typicode.com/photos');\r\n        return await response.json();\r\n\r\n    }\r\n    catch (e) {\r\n        throw new Error(e);\r\n    }\r\n\r\n}\r\nexport const getPhotosWithUserId = async (userId) => {\r\n    try {\r\n        let response = await fetch(`https://jsonplaceholder.typicode.com/albums/${userId}/photos`);\r\n        return await response.json();\r\n\r\n    }\r\n    catch (e) {\r\n        throw new Error(e);\r\n    }\r\n\r\n}\r\nconst binarySearch = (value, list) => {\r\n    let first = 0;    \r\n    let last = list.length - 1;   \r\n    let position = -1;\r\n    let found = false;\r\n    let middle;\r\n    console.log('list',list);\r\n    while (found === false && first <= last) {\r\n        middle = Math.floor((first + last)/2);\r\n        if (list[middle].albumId == value) {\r\n            found = true;\r\n            position = middle;\r\n        } else if (list[middle].albumId > value) { \r\n            last = middle - 1;\r\n        } else {  //in in upper half\r\n            first = middle + 1;\r\n        }\r\n    }\r\n    return position;\r\n}\r\nconst findFirstIndex = (index,allPhotos,userId) =>{\r\n              \r\n             if(index === -1)\r\n                 return index;\r\n             let value = 0; \r\n             for(let i = index ; i >= 0; i-- )\r\n             {\r\n                \r\n                 if(allPhotos[i].albumId !== userId)\r\n                 {\r\n                     value = ++i;\r\n                     break;\r\n                 }\r\n                 else\r\n                   value = i\r\n\r\n             }\r\n             return value;\r\n\r\n}\r\n\r\n\r\n/**************************************************** */\r\n// 2 version for demonstration purpoises\r\n\r\n/**************************************** */\r\n\r\n\r\n/*\r\n*  Done With parametirezed  \r\n*/\r\nconst getPhotosWithPArameterCall =  async (setPhotos,userId,i,setClicked,ALBUMS) =>{\r\n   \r\n    setClicked(ALBUMS.map((e,index)=>{ if(index === i) return true; return false}));\r\n    setPhotos( await getPhotos(userId));\r\n\r\n\r\n\r\n}\r\n\r\n/*\r\n*  first done with binary search and all the data \r\n*/\r\n\r\nlet reverse = true;\r\nexport const getPhotos = (setPhotos,allPhotos, userId,i,ALBUMS,setClicked) =>{\r\n       let index = binarySearch(userId,allPhotos);\r\n       index = findFirstIndex(index,allPhotos,userId);\r\n       const array = [];\r\n       console.log(\"allPhotos\", allPhotos);\r\n       for(let i = index; i < allPhotos.length && index !== -1;i++ )\r\n       {\r\n           if(allPhotos[i].albumId === userId)\r\n              array.push(allPhotos[i]);\r\n              \r\n           \r\n       }\r\n       reverse = !reverse;\r\n       setClicked(ALBUMS.map((e,index)=>{ if(index === i) return true; return false}));\r\n       console.log(\"reverse\", reverse);\r\n       setPhotos( reverse ? array.reverse().slice() : array.slice());\r\n\r\n\r\n\r\n}","import { Albums } from './components/Albums';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <Albums />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}